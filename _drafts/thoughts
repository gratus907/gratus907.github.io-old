
요즘은 boj.kr에 접속할 때와 chess.com을 접속할 때의 마음가짐이 비슷해지는것 같습니다. 아카데믹하게 알고리즘을 공부하겠다는 생각을 조금씩 하고 있지만, 앞으로의 제 커리어와 미래가 어떻게 될지는 아무도 모르는 거겠죠. 그래도 아카데믹한 공부와 PS는 느낌이 살짝 다르니까 더욱 그럴수 있는것 같습니다. 

이 Phase의 제목은 최근 여러 대회를 치면서 제 performance가 널뛰기하는것을 스스로 리뷰해 보고 내린 결론입니다.
1. 현재 제 Codeforces 레이팅은 2100정도인데, Division 1은 2에 비해 훨씬 퍼포먼스 널뛰기가 심해서 예측이 어렵지만 대충 현 실력에 수렴했다고 생각합니다. 즉, 코포 오렌지 정도가 제 실력의 기준입니다. Codeforces Rating이 실력을 얼마나 정확하게 반영하는지는 차치하고, 많은 사람들이 코포 레이팅을 척도로 쓰니까 저도 쓰겠습니다.
2. 저는 팀 대회에서 (특히 초중반에) 퍼포먼스가 나쁘지 않습니다. 구현실력이 제 단점이라고 생각했었지만, 학교의 여러 프로젝트를 비롯하여 코딩 자체를 많이 하니까 좀 나아진것 같습니다. 물론 dlwocks31처럼 빠르고 정확하게 코딩하며 잘 말리지 않는 (그리고 말려도 회복가능한) 코딩실력은 여전히 매우 부럽지만, 심각하게 말리기 전까지는 제 레이팅에 비해 코딩이 엄청 느리지는 않습니다. 다만 코딩에서 한번 말리면 회복을 잘 못하는데, 이것도 체감상 조금씩 나아지고 있으며 이건 해결가능한 이슈입니다. 
3. 경험적으로 라운드가 길어질수록 제가 못 합니다. 차라리 엄청나게 긴 라운드 (마라톤) 이라면 또 모르겠습니다만, 5시간짜리 대회의 후반에는 풀 수 있는 문제도 어려움을 겪습니다. 이걸 가장 크게 느끼는 대회는 **SCPC**인데, 12시간짜리 라운드는 정말 악몽이었습니다. 2020 SCPC의 경우 24시간짜리 Round1에서 5번을 풀지 못했는데, 사실 문제 자체의 난이도는 그 문제를 먼저 잡았다면 3시간이면 해결 가능했다고 생각합니다. 대략 4시간 시점부터 코포 레이팅으로 치면 1600-1700 수준까지 수직낙하합니다. 
4. 팀 연습, 또는 팀 대회에서는 3번의 현상이 발생하지 않습니다. 5시간짜리 ICPC 셋에서도 후반부까지 크게 밀리지 않습니다.
5. 1-4로부터 내린 결론은, **Last Progress Made** 가 큰 영향을 미친다는 것입니다. 마지막으로 발생한 이벤트가 영향을 미치며, 그 시점으로부터 퍼포먼스가 decay합니다. 다만 보통 exponential decay가 말하는 ㄴ자형 그래프는 아니고, $\max(A-e^{bt}, C)$ 형태의 ㄱ자인것 같습니다.
6. 이 이슈는 많은 사람들이 겪는다고 알려져 있습니다. 제가 유독 심한 편인것 같기는 하지만, 다들 조금씩은 비슷한 경험이 있을 것이라고 생각합니다. 다만 팀대회때는 Last progress를 제가 만들지 못하더라도 계속 팀원이 저 카운터를 리셋해줄수 있고, 특히 2019년부터의 팽도리팀은 각자 저 퍼포먼스 그래프가 다르기 때문에 더 재밌게 대회를 칠 수 있습니다.
